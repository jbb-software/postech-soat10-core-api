name: Deploy Kubernetes application

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure kubeconfig
      run: |
        aws eks --region us-east-1 update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Verify cluster connection
      run: kubectl get nodes

    - name: Create Kubernetes Secret
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        kubectl create secret generic postech-api-secret \
          --namespace postech-api \
          --from-literal=DB_HOST=$DB_HOST \
          --from-literal=DB_PORT=$DB_PORT \
          --from-literal=DB_NAME=$DB_NAME \
          --from-literal=DB_USER=$DB_USER \
          --from-literal=DB_PASSWORD=$DB_PASSWORD \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Apply Kubernetes manifests
      run: kubectl apply -f iac/kubernetes/
